version: '3.8'

services:
  # Zookeeper using the Confluent Inc. image for better integration
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka using the Confluent Inc. image
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # --- KEY ADDITION ---
      # Automatically creates the 'ev_charging_logs' topic on startup.
      # Format: "topic-name:partitions:replication-factor"
      KAFKA_CREATE_TOPICS: "ev_charging_logs:1:1"

  # Your application services (unchanged)
  central:
    build:
      context: ..
      dockerfile: docker/Dockerfile.central
    ports:
      - "8000:8000"  # websocket / dashboard
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
    depends_on:
      - kafka

  cp_engine_01:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cp
    environment:
      - CP_ID=CP-01
      - CENTRAL_WS=ws://central:8000/ws
      - KAFKA_BOOTSTRAP=kafka:9092
    depends_on:
      - central

  cp_monitor_01:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cp
    environment:
      - CP_ID=CP-01
      - MODE=monitor
      - CENTRAL_WS=ws://central:8000/ws
      - KAFKA_BOOTSTRAP=kafka:9092
    depends_on:
      - central

  driver:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cp
    environment:
      - CENTRAL_WS=ws://central:8000/ws
    depends_on:
      - central